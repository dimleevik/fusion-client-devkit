on:
  workflow_call:
    inputs:
      TAG:
        required: true
        description: "Tag for the image"
        type: string
      IMAGE_REGISTRY:
        required: true
        description: "Name of public registry"
        type: string
      IMAGE_NAME:
        required: true
        description: "Name of public registry"
        type: string
      IS_LATEST:
        type: boolean
        description: "Shows should we upgrade latest tag to new version"
        default: false

jobs:
  publish-images:
    runs-on: ubuntu-latest
    name: Publish docker images
    environment: fusion-devkit-publishing
    steps:
      - uses: snyk/actions/setup@master
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3

      - name: Login to image public registry
        uses: docker/login-action@v2
        with:
          registry: ${{ inputs.IMAGE_REGISTRY }}
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Load dockerimage
        run: docker load -i fusion-devkit-amd64/fusion-devkit-amd64.tar

      - name: Load dockerimage
        run: docker load -i fusion-devkit-arm64/fusion-devkit-arm64.tar

      - name: Assign different registry tag for amd64
        run: docker tag localhost:5000/${{ inputs.IMAGE_NAME }}:amd64 ${{ inputs.IMAGE_REGISTRY }}/${{ inputs.IMAGE_NAME }}:amd64
      - name: Assign different registry tag for arm64
        run: docker tag localhost:5000/${{ inputs.IMAGE_NAME }}:arm64 ${{ inputs.IMAGE_REGISTRY }}/${{ inputs.IMAGE_NAME }}:arm64

      - name: Push amd 64 image
        run: docker push ${{ inputs.IMAGE_REGISTRY }}/${{ inputs.IMAGE_NAME }}:amd64
      - name: Push arm 64 image
        run: docker push ${{ inputs.IMAGE_REGISTRY }}/${{ inputs.IMAGE_NAME }}:arm64

      - name: Create manifest for current tag
        run: |
          docker manifest create ${{ inputs.IMAGE_REGISTRY }}/${{ inputs.IMAGE_NAME }}:${{ inputs.TAG }} \
          --amend ${{ inputs.IMAGE_REGISTRY }}/${{ inputs.IMAGE_NAME }}:amd64 \
          --amend ${{ inputs.IMAGE_REGISTRY }}/${{ inputs.IMAGE_NAME }}:arm64

      - name: Publish manifest for current tag
        run: docker manifest push ${{ inputs.IMAGE_REGISTRY }}/${{ inputs.IMAGE_NAME }}:${{ inputs.TAG }}

      - name: Create manifest for latest tag
        if: ${{inputs.IS_LATEST}} == true
        run: |
          docker manifest create ${{ inputs.IMAGE_REGISTRY }}/${{ inputs.IMAGE_NAME }}:latest \
          --amend ${{ inputs.IMAGE_REGISTRY }}/${{ inputs.IMAGE_NAME }}:amd64 \
          --amend ${{ inputs.IMAGE_REGISTRY }}/${{ inputs.IMAGE_NAME }}:arm64

      - name: Publish manifest for latest tag
        if: ${{inputs.IS_LATEST}} == true
        run: docker manifest push ${{ inputs.IMAGE_REGISTRY }}/${{ inputs.IMAGE_NAME }}:latest

      - name: Add snyk monitor on published image
        run: |
          curl --location 'https://snyk.io/api/v1/org/${{ secrets.SNYK_ORG_ID }}/integrations/${{ secrets.QUAY_SNYK_INTEGRATION_ID }}/import' \
          --header 'Authorization: token ${{ secrets.SNYK_TOKEN }}' \
          --header 'Content-Type: application/json; charset=utf-8' \
          --data '{
            "target": {
              "name": "${{ inputs.IMAGE_REGISTRY }}/${{ inputs.IMAGE_NAME }}:latest"
            }
          }'

      - name: Add snyk
        run: |
          curl --location 'https://snyk.io/api/v1/org/${{ secrets.SNYK_ORG_ID }}/integrations/${{ secrets.QUAY_SNYK_INTEGRATION_ID }}/import' \
          --header 'Authorization: token ${{ secrets.SNYK_TOKEN }}' \
          --header 'Content-Type: application/json; charset=utf-8' \
          --data '{
            "target": {
              "name": "${{ inputs.IMAGE_REGISTRY }}/${{ inputs.IMAGE_NAME }}:${{ inputs.TAG }}"
            }
          }'
