on:
  workflow_call:
    inputs:
      PLATFORM_NAME:
        required: true
        type: string
      TAG:
        required: true
        type: string

jobs:
  build-and-scan-image:
    runs-on: ubuntu-latest
    name: Build and scan docker image for linux/${{ inputs.PLATFORM_NAME }}
    environment: fusion-devkit-env
    steps:
      - uses: actions/checkout@v3
      - uses: snyk/actions/setup@master

      - name: Get swagger-ui repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          repository: swagger-api/swagger-ui
          ref: refs/tags/${{ vars.SWAGGER_UI_VERSION }}
          path: ./swagger-ui

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: |
            network=host
          platforms: linux/${{ inputs.PLATFORM_NAME }}

      - name: Patch Dockerfile of swagger-ui docker image
        run: sed -i "s/nginx:1.23.2-alpine/nginx:alpine/; s/nodejs>=16.17.1-r0/nodejs>=18.14.1-r0/" ./swagger-ui/Dockerfile
        shell: bash

      - name: Build patched swagger-ui
        run: docker buildx build --load --provenance=false --platform linux/${{ inputs.PLATFORM_NAME }} -t swaggerapi/swagger-ui:${{ vars.SWAGGER_UI_VERSION }} ./swagger-ui/.
        shell: bash

      - name: Build docker image
        uses: docker/build-push-action@v4
        with:
          provenance: false
          load: true
          platforms: linux/${{ inputs.PLATFORM_NAME }}
          build-args: |
            SWAGGER_UI_IMAGE=swagger-ui:${{ vars.SWAGGER_UI_VERSION }}
            LOCAL_REGISTRY=swaggerapi/
          tags: ${{ vars.IMAGE_NAME }}-${{ inputs.PLATFORM_NAME }}:${{ inputs.TAG }}

      - name: Create artifact image ${{ inputs.PLATFORM_NAME }}
        run: docker save ${{ vars.IMAGE_NAME }}-${{ inputs.PLATFORM_NAME }}:${{ inputs.TAG }} > fusion-devkit-${{ inputs.PLATFORM_NAME }}.tar

      - name: upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: fusion-devkit-${{ inputs.PLATFORM_NAME }}
          path: fusion-devkit-${{ inputs.PLATFORM_NAME }}.tar
          retention-days: 5

      - name: Run Snyk test to check Docker image for vulnerabilities
        continue-on-error: true
        run: snyk container test --platform=linux/${{ inputs.PLATFORM_NAME }} --project-lifecycle=development --file=./Dockerfile ${{ vars.IMAGE_NAME }}-${{ inputs.PLATFORM_NAME }}:${{ inputs.TAG }}
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
