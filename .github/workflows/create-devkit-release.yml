on:
  workflow_dispatch:
    inputs:
      versionName:
        description: "Name of version (x.x)"
        required: true
jobs:
  validate-release-tag:
    runs-on: ubuntu-latest
    name: Validate inputs
    environment: fusion-devkit-env
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - name: Validate major and minor semver input
        run: |
          major_minor_semver_regex='^(0|[1-9]\d*)\.(0|[1-9]\d*)$'
          if [[ ! "${{ inputs.versionName }}" =~ $major_minor_semver_regex ]]; then
            echo "Error: The provided major and minor semver string '${{ inputs.versionName }}' is invalid." 
            exit 1
          fi
        shell: bash

      - name: Get tag
        run: echo RELEASE_TAG=v${{ inputs.versionName }}.0 >> $GITHUB_ENV

      - name: Check if tag exists
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}
        run: |
          trap "exit 0" EXIT
          response=$(gh api -H "Accept: application/vnd.github+json" /repos/${{ github.repository }}/git/ref/tags/$RELEASE_TAG)
          if [[ "$response" == *"$RELEASE_TAG"* ]]; then
            trap "exit 1" EXIT
            echo "Error: Tag $RELEASE_TAG already exists"
            exit 1 
          fi

  build-amd-ver:
    needs: validate-release-tag
    uses: ./.github/workflows/build-and-scan-image.yml
    with:
      PLATFORM_NAME: amd64
      TAG: v${{ inputs.versionName }}.0
    secrets: inherit

  build-arm-ver:
    needs: validate-release-tag
    uses: ./.github/workflows/build-and-scan-image.yml
    with:
      PLATFORM_NAME: arm64
      TAG: v${{ inputs.versionName }}.0
    secrets: inherit

  publish-image:
    uses: ./.github/workflows/publish-image.yml
    needs: [build-amd-ver, build-arm-ver]
    with:
      TAG: v${{ inputs.versionName }}.0
      IS_LATEST: true
    secrets: inherit

  create-release:
    runs-on: ubuntu-latest
    needs: publish-image
    name: Create release
    steps:
      - uses: actions/checkout@v3

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v3

      - name: Create tag
        uses: actions/github-script@v6
        with:
          script: |
            try{
              github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'refs/tags/v${{ inputs.versionName }}.0',
                sha: context.sha
              })
            } catch (error) {
              core.setFailed(error.message);
            }

      - name: Create release branch
        uses: actions/github-script@v6
        with:
          script: |
            try{
              github.rest.git.createRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: 'refs/heads/stable-branch/v${{ inputs.versionName }}',
                sha: context.sha
              });
            } catch (error) {
              core.setFailed(error.message);
            }

      - name: Create a release in GitHub and upload assets
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}
        run: gh release create --title "Fusion-Devkit v${{ inputs.versionName }}.0" v${{ inputs.versionName }}.0 fusion-devkit-arm64/fusion-devkit-arm64.tar fusion-devkit-amd64/fusion-devkit-amd64.tar
        shell: bash
